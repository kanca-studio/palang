// Code generated by MockGen. DO NOT EDIT.
// Source: service/email/service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// EmailService is a mock of Service interface
type EmailService struct {
	ctrl     *gomock.Controller
	recorder *EmailServiceMockRecorder
}

// EmailServiceMockRecorder is the mock recorder for EmailService
type EmailServiceMockRecorder struct {
	mock *EmailService
}

// NewEmailService creates a new mock instance
func NewEmailService(ctrl *gomock.Controller) *EmailService {
	mock := &EmailService{ctrl: ctrl}
	mock.recorder = &EmailServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *EmailService) EXPECT() *EmailServiceMockRecorder {
	return m.recorder
}

// SendActivationToken mocks base method
func (m *EmailService) SendActivationToken(email, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendActivationToken", email, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendActivationToken indicates an expected call of SendActivationToken
func (mr *EmailServiceMockRecorder) SendActivationToken(email, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendActivationToken", reflect.TypeOf((*EmailService)(nil).SendActivationToken), email, token)
}
